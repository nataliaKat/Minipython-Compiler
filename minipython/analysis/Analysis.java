/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.analysis;

import minipython.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object in);
    Object getOut(Node node);
    void setOut(Node node, Object out);

    void caseStart(Start node);
    void caseAGoal(AGoal node);
    void caseAFuncGoalHelper(AFuncGoalHelper node);
    void caseAStmtGoalHelper(AStmtGoalHelper node);
    void caseAFunction(AFunction node);
    void caseAArgument(AArgument node);
    void caseANotFirstArgument(ANotFirstArgument node);
    void caseAConditionStatement(AConditionStatement node);
    void caseALoopWhileStatement(ALoopWhileStatement node);
    void caseALoopForStatement(ALoopForStatement node);
    void caseAReturnStatement(AReturnStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseAAssignEqStatement(AAssignEqStatement node);
    void caseAAssignEqOperationStatement(AAssignEqOperationStatement node);
    void caseAArrayAssignStatement(AArrayAssignStatement node);
    void caseAAssertStatement(AAssertStatement node);
    void caseAFuncCallStatement(AFuncCallStatement node);
    void caseAImportStatement(AImportStatement node);
    void caseAPlusExpression(APlusExpression node);
    void caseAArithmeticOperationExpression(AArithmeticOperationExpression node);
    void caseAValExpression(AValExpression node);
    void caseAIdentifierExpression(AIdentifierExpression node);
    void caseAMaxExpression(AMaxExpression node);
    void caseAMinExpression(AMinExpression node);
    void caseALenExpression(ALenExpression node);
    void caseAFunctionExpression(AFunctionExpression node);
    void caseASubscriptionExpression(ASubscriptionExpression node);
    void caseAArrayExpression(AArrayExpression node);
    void caseAWithoutFromImportRule(AWithoutFromImportRule node);
    void caseAWithFromImportRule(AWithFromImportRule node);
    void caseAModule(AModule node);
    void caseAModuleCaller(AModuleCaller node);
    void caseANotFirstImportModule(ANotFirstImportModule node);
    void caseANotFirstImportId(ANotFirstImportId node);
    void caseAImportAlias(AImportAlias node);
    void caseAFuncCall(AFuncCall node);
    void caseACompAndComparison(ACompAndComparison node);
    void caseAOrCompComparison(AOrCompComparison node);
    void caseAComparisonComparison(AComparisonComparison node);
    void caseAAndCompComparison(AAndCompComparison node);
    void caseAGreatComparison(AGreatComparison node);
    void caseALessComparison(ALessComparison node);
    void caseAGreatEqComparison(AGreatEqComparison node);
    void caseALessEqComparison(ALessEqComparison node);
    void caseANotEqComparison(ANotEqComparison node);
    void caseACompEqComparison(ACompEqComparison node);
    void caseATrueComparison(ATrueComparison node);
    void caseAFalseComparison(AFalseComparison node);
    void caseANotCComparison(ANotCComparison node);
    void caseAFCallValue(AFCallValue node);
    void caseANumberValue(ANumberValue node);
    void caseAStringValue(AStringValue node);
    void caseANoneValue(ANoneValue node);

    void caseTTab(TTab node);
    void caseTPlus(TPlus node);
    void caseTMinusEq(TMinusEq node);
    void caseTMinus(TMinus node);
    void caseTDmult(TDmult node);
    void caseTMult(TMult node);
    void caseTDivEq(TDivEq node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTCompEq(TCompEq node);
    void caseTGreatEq(TGreatEq node);
    void caseTLessEq(TLessEq node);
    void caseTNotEq(TNotEq node);
    void caseTEq(TEq node);
    void caseTExclam(TExclam node);
    void caseTDef(TDef node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBr(TLBr node);
    void caseTRBr(TRBr node);
    void caseTComma(TComma node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTNot(TNot node);
    void caseTIf(TIf node);
    void caseTElif(TElif node);
    void caseTElse(TElse node);
    void caseTWhile(TWhile node);
    void caseTFor(TFor node);
    void caseTIn(TIn node);
    void caseTPrint(TPrint node);
    void caseTReturn(TReturn node);
    void caseTAssert(TAssert node);
    void caseTLen(TLen node);
    void caseTMax(TMax node);
    void caseTMin(TMin node);
    void caseTImport(TImport node);
    void caseTFrom(TFrom node);
    void caseTNone(TNone node);
    void caseTAs(TAs node);
    void caseTLess(TLess node);
    void caseTGreat(TGreat node);
    void caseTTrue(TTrue node);
    void caseTSemi(TSemi node);
    void caseTFalse(TFalse node);
    void caseTBlank(TBlank node);
    void caseTLineComment(TLineComment node);
    void caseTNumber(TNumber node);
    void caseTId(TId node);
    void caseTStringLiteral(TStringLiteral node);
    void caseTSep(TSep node);
    void caseEOF(EOF node);
}
