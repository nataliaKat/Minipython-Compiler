/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AImportStatement extends PStatement
{
    private PImportRule _importRule_;

    public AImportStatement()
    {
    }

    public AImportStatement(
        PImportRule _importRule_)
    {
        setImportRule(_importRule_);

    }
    public Object clone()
    {
        return new AImportStatement(
            (PImportRule) cloneNode(_importRule_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAImportStatement(this);
    }

    public PImportRule getImportRule()
    {
        return _importRule_;
    }

    public void setImportRule(PImportRule node)
    {
        if(_importRule_ != null)
        {
            _importRule_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _importRule_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_importRule_);
    }

    void removeChild(Node child)
    {
        if(_importRule_ == child)
        {
            _importRule_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_importRule_ == oldChild)
        {
            setImportRule((PImportRule) newChild);
            return;
        }

    }
}
